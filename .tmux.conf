# general {

setw -g xterm-keys on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

# enable mouse mode
set -g mouse on

# edit configuration
bind e new-window -n "~/.tmux.conf.local" "sh -c '\${EDITOR:-vim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# }

# display {

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time

# activity
set -g monitor-activity on
set -g visual-activity off

# seebi/tmux-colors-solarized {
set -g @colors-solarized 'dark'
# }

# }


# navigation {

# create session
bind C-c new-session

# window navigation
bind Tab last-window        # move to last active window

# }

# buffers {

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# buffers
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind B choose-buffer # choose which buffer to paste from

# }

# status bar {
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 85
set-option -g status-right-length 150
set-option -g status-left "#($TMUX_PLUGIN_MANAGER_PATH/tmux-powerline/powerline.sh left)"
set-option -g status-right "#($TMUX_PLUGIN_MANAGER_PATH/tmux-powerline/powerline.sh right)"

set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

bind C-[ run '$TMUX_PLUGIN_MANAGER_PATH/tmux-powerline/mute_powerline.sh left'    # Mute left statusbar.
bind C-] run '$TMUX_PLUGIN_MANAGER_PATH/tmux-powerline/mute_powerline.sh right'   # Mute right statusbar.
# }

# tmux-plugins/tmux-open {
set -g @open-S 'https://www.google.com/search?q='
# }

# tmux-plugins/tmux-continuum {
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
# }

# plugins {
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'seebi/tmux-colors-solarized'
#set -g @plugin 'thewtex/tmux-mem-cpu-load' # brew install tmux-mem-cpu-load
set -g @plugin 'dskindell/tmux-powerline'
set -g @plugin 'dskindell/tmux-urlscan' # pip install --user urlscan
set -g @plugin 'tmux-plugins/tmux-copycat' # brew install gawk
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jbnicolai/tmux-fpp' # brew isntall fpp
set -g @plugin 'dskindell/tmux-logging' # brew install ansifilter
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
# }

